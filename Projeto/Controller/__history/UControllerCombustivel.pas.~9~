unit UControllerCombustivel;

interface

uses UClasseCombustivel, UDAOCombustivel;

type
  TControleCombustivel = class

  private
    //funções privadas pra validar algo, código do CPF por exemplo

  public
    //procedimentos publicos pra salvar
    procedure Salvar(const objetoCliente: TCombustivel);

  end;

implementation

uses
  StrUtils, SysUtils;

{ TControleCombustivel }

procedure TControleCombustivel.Salvar(const objetoCliente: TCombustivel);
var
  objetoDAOCombustivel : TDAOCombustível;
begin
  objetoDAOCombustivel := TDAOCombustível.Create;
  try
    {utilizei exceções para abortar a instrução mas correto um tratamento utilizando try..except, mais amigável.}
    if objetoCliente.Descricao= '' then
       raise Exception.Create('Preencha a Descrição do Combustível');

    //if not (ValidarCPF(objetoCliente.CPF)) then
    //   raise Exception.Create('CPF inválido!');

    objetoDAOCombustivel.Salvar(objetoCliente);
  finally
    FreeAndNil(objetoDAOCombustivel);
  end;
end;

end.
