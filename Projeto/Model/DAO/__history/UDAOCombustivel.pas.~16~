unit uDAOCombustivel;

interface

uses
  FireDAC.Comp.Client, uConexaoBD, System.SysUtils, UClasseCombustivel;

type
  TDAOCombustivel = class
  private
    FConexao: TConexao;
  public
    constructor Create;

    function Incluir(objCombustivel: TCombustivel): Boolean;
    function Alterar(objCombustivel: TCombustivel): Boolean;
    function Excluir(objCombustivel: TCombustivel): Boolean;
    function Consultar: TFDQuery;
  end;

implementation

{ TClienteDao }

uses uSistemaControl;

function TDAOCombustivel.Alterar(objCombustivel: TCombustivel): Boolean;
var VQry: TFDQuery;
begin
  VQry := FConexao.CriarQuery();
  try
    VQry.ExecSQL('update cliente set nome = :nome where (codigo = :codigo)', [objCombustivel.Descricao, objCombustivel.Preco]);
    Result := True;
  finally
    VQry.Free;
  end;
end;

constructor TDAOCombustivel.Create;
begin
  FConexao := TSistemaControl.GetInstance().Conexao;
end;

function TDAOCombustivel.Excluir(objCombustivel: TCombustivel): Boolean;
var VQry: TFDQuery;
begin
  VQry := FConexao.CriarQuery();
  try
    VQry.ExecSQL('delete from cliente where (codigo = :codigo)', [objCombustivel.ID]);
    Result := True;
  finally
    VQry.Free;
  end;
end;

function TDAOCombustivel.Incluir(objCombustivel: TCombustivel): Boolean;
var VQry: TFDQuery;
begin
  VQry := FConexao.CriarQuery();
  try
    VQry.ExecSQL('insert into cliente (codigo, nome) values (:codigo, :nome)', [objCombustivel.Descricao, objCombustivel.Preco]);
    Result := True;
  finally
    VQry.Free;
  end;
end;

function TDAOCombustivel.Consultar: TFDQuery;
var VQry: TFDQuery;
begin
  VQry := FConexao.CriarQuery();
  VQry.Open('select codigo, nome from cliente order by 1');
  Result := VQry;
end;

end.
